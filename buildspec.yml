version: 0.2

env:
  variables:
    ECR_REPO: "<ECR_REPO_URL>/app-b"
    K8S_DEPLOYMENT: "k8s/app_b_deployment.yaml"

phases:
  install:
    runtime-versions:
      docker: 19
    commands:
      - echo Installing kubectl...
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod +x kubectl
      - mv kubectl /usr/local/bin/
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin <ECR_REPO_URL>
      - TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $ECR_REPO:$TAG .
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $ECR_REPO:$TAG
      - echo Updating Kubernetes deployment...
      - sed -i "s|<ECR_REPO_URL>/app-b:latest|$ECR_REPO:$TAG|g" $K8S_DEPLOYMENT
      - kubectl apply -f $K8S_DEPLOYMENT
      - kubectl apply -f k8s/app_b_service.yaml