version: 0.2

env:
  variables:
    K8S_DEPLOYMENT: "k8s/deployment.yaml"
    CLUSTER_NAME: "cluster-image-processor"
    AWS_DEFAULT_REGION: "us-east-1"

phases:
  install:
    runtime-versions:
      docker: 19
    commands:
      - echo Installing kubectl...
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod +x kubectl
      - mv kubectl /usr/local/bin/
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPO_URL
      - TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $ECR_REPO_URL:$TAG .
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $ECR_REPO_URL:$TAG
      - echo Updating Kubernetes deployment...
      - sed -i "s|<ECR_REPO_URL>/app-a:latest|$ECR_REPO_URL:$TAG|g" $K8S_DEPLOYMENT
      - echo Authenticating with EKS...
      - aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_DEFAULT_REGION
      - kubectl apply -f $K8S_DEPLOYMENT
      - kubectl apply -f k8s/service.yaml